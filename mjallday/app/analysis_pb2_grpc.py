# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import analysis_pb2 as analysis__pb2


class AnalysisServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Analyze = channel.unary_unary(
        '/AnalysisService/Analyze',
        request_serializer=analysis__pb2.AnalysisRequest.SerializeToString,
        response_deserializer=analysis__pb2.AnalysisReply.FromString,
        )


class AnalysisServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Analyze(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalysisServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Analyze': grpc.unary_unary_rpc_method_handler(
          servicer.Analyze,
          request_deserializer=analysis__pb2.AnalysisRequest.FromString,
          response_serializer=analysis__pb2.AnalysisReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AnalysisService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
